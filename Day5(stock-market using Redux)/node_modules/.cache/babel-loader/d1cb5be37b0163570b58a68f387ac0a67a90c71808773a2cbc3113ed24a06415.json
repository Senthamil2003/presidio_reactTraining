{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const MyStockSlice = createSlice({\n  name: \"stock\",\n  initialState: {\n    รง: [\"jij\"],\n    MyBalance: 1000\n  },\n  reducers: {\n    BuyStock: (state, action) => {\n      let stockExists = false;\n      state.myStock.forEach(item => {\n        if (item.id === action.payload.id) {\n          item.ct += 1;\n          stockExists = true;\n        }\n      });\n      if (!stockExists) {\n        state.myStock.push({\n          ...action.payload,\n          ct: 1\n        });\n      }\n      state.MyBalance -= action.payload.price;\n    },\n    SellStock: (state, action) => {\n      const updatedStocks = state.myStock.filter(item => {\n        if (item.id === action.payload.id) {\n          if (item.ct > 1) {\n            item.ct -= 1;\n            return true;\n          }\n          return false;\n        }\n        return true;\n      });\n      state.myStock = updatedStocks;\n      state.MyBalance += action.payload.price;\n    }\n  }\n});\nexport default MyStockSlice.reducer;","map":{"version":3,"names":["createSlice","MyStockSlice","name","initialState","รง","MyBalance","reducers","BuyStock","state","action","stockExists","myStock","forEach","item","id","payload","ct","push","price","SellStock","updatedStocks","filter","reducer"],"sources":["/Users/senthamil/Documents/React_training/Day5(stock-market using Redux)/src/store/MyStockSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const MyStockSlice = createSlice({\n  name: \"stock\",\n  initialState: {\n    รง: [\"jij\"],\n    MyBalance: 1000,\n  },\n  reducers: {\n    BuyStock: (state, action) => {\n      let stockExists = false;\n      state.myStock.forEach((item) => {\n        if (item.id === action.payload.id) {\n          item.ct += 1; \n          stockExists = true;\n        }\n      });\n\n      if (!stockExists) {\n        state.myStock.push({ ...action.payload, ct: 1 });\n      }\n      state.MyBalance -= action.payload.price; \n    },\n    SellStock: (state, action) => {\n      const updatedStocks = state.myStock.filter((item) => {\n        if (item.id === action.payload.id) {\n          if (item.ct > 1) {\n            item.ct -= 1;\n            return true; \n          }\n          return false; \n        }\n        return true; \n      });\n      state.myStock = updatedStocks;\n      state.MyBalance += action.payload.price; \n    },\n  },\n});\n\n\nexport default MyStockSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,CAAC,EAAE,CAAC,KAAK,CAAC;IACVC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,IAAIC,WAAW,GAAG,KAAK;MACvBF,KAAK,CAACG,OAAO,CAACC,OAAO,CAAEC,IAAI,IAAK;QAC9B,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,EAAE;UACjCD,IAAI,CAACG,EAAE,IAAI,CAAC;UACZN,WAAW,GAAG,IAAI;QACpB;MACF,CAAC,CAAC;MAEF,IAAI,CAACA,WAAW,EAAE;QAChBF,KAAK,CAACG,OAAO,CAACM,IAAI,CAAC;UAAE,GAAGR,MAAM,CAACM,OAAO;UAAEC,EAAE,EAAE;QAAE,CAAC,CAAC;MAClD;MACAR,KAAK,CAACH,SAAS,IAAII,MAAM,CAACM,OAAO,CAACG,KAAK;IACzC,CAAC;IACDC,SAAS,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC5B,MAAMW,aAAa,GAAGZ,KAAK,CAACG,OAAO,CAACU,MAAM,CAAER,IAAI,IAAK;QACnD,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,EAAE;UACjC,IAAID,IAAI,CAACG,EAAE,GAAG,CAAC,EAAE;YACfH,IAAI,CAACG,EAAE,IAAI,CAAC;YACZ,OAAO,IAAI;UACb;UACA,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb,CAAC,CAAC;MACFR,KAAK,CAACG,OAAO,GAAGS,aAAa;MAC7BZ,KAAK,CAACH,SAAS,IAAII,MAAM,CAACM,OAAO,CAACG,KAAK;IACzC;EACF;AACF,CAAC,CAAC;AAGF,eAAejB,YAAY,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}