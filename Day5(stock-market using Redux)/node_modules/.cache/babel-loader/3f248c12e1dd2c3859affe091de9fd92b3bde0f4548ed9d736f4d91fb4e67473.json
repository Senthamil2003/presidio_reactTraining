{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const MyStockSlice = createSlice({\n  name: \"stock\",\n  initialState: {\n    myStock: [],\n    MyBalance: 1000\n  },\n  reducers: {\n    BuyStock: (state, action) => {\n      let stockExists = false;\n      state.myStock.forEach(item => {\n        if (item.id === action.payload.id) {\n          item.ct += 1;\n          stockExists = true;\n        }\n      });\n      if (!stockExists) {\n        state.myStock.push({\n          ...action.payload,\n          ct: 1\n        });\n      }\n      state.MyBalance -= action.payload.price;\n    },\n    SellStock: (state, action) => {\n      console.log(action);\n      const updatedStocks = state.myStock.filter(item => {\n        return item.id != action.payload.id;\n      });\n      state.myStock = updatedStocks;\n      state.MyBalance += Number(action.payload.price) * Number(action.payload.ct);\n    }\n  }\n});\nexport const {\n  BuyStock,\n  SellStock\n} = MyStockSlice.actions;\nexport default MyStockSlice.reducer;","map":{"version":3,"names":["createSlice","MyStockSlice","name","initialState","myStock","MyBalance","reducers","BuyStock","state","action","stockExists","forEach","item","id","payload","ct","push","price","SellStock","console","log","updatedStocks","filter","Number","actions","reducer"],"sources":["/Users/senthamil/Documents/React_training/Day5(stock-market using Redux)/src/store/MyStockSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const MyStockSlice = createSlice({\n  name: \"stock\",\n  initialState: {\n    myStock: [],\n    MyBalance: 1000,\n  },\n  reducers: {\n    BuyStock: (state, action) => {\n      let stockExists = false;\n      state.myStock.forEach((item) => {\n        if (item.id === action.payload.id) {\n          item.ct += 1;\n          stockExists = true;\n        }\n      });\n\n      if (!stockExists) {\n        state.myStock.push({ ...action.payload, ct: 1 });\n      }\n      state.MyBalance -= action.payload.price;\n    },\n    SellStock: (state, action) => {\n      console.log(action)\n      const updatedStocks = state.myStock.filter((item) => {\n       return item.id != action.payload.id;\n      });\n      state.myStock = updatedStocks;\n      \n      state.MyBalance +=\n        Number(action.payload.price) * Number(action.payload.ct);\n    },\n  },\n});\n\nexport const { BuyStock, SellStock } = MyStockSlice.actions;\nexport default MyStockSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B,IAAIC,WAAW,GAAG,KAAK;MACvBF,KAAK,CAACJ,OAAO,CAACO,OAAO,CAAEC,IAAI,IAAK;QAC9B,IAAIA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,EAAE;UACjCD,IAAI,CAACG,EAAE,IAAI,CAAC;UACZL,WAAW,GAAG,IAAI;QACpB;MACF,CAAC,CAAC;MAEF,IAAI,CAACA,WAAW,EAAE;QAChBF,KAAK,CAACJ,OAAO,CAACY,IAAI,CAAC;UAAE,GAAGP,MAAM,CAACK,OAAO;UAAEC,EAAE,EAAE;QAAE,CAAC,CAAC;MAClD;MACAP,KAAK,CAACH,SAAS,IAAII,MAAM,CAACK,OAAO,CAACG,KAAK;IACzC,CAAC;IACDC,SAAS,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC5BU,OAAO,CAACC,GAAG,CAACX,MAAM,CAAC;MACnB,MAAMY,aAAa,GAAGb,KAAK,CAACJ,OAAO,CAACkB,MAAM,CAAEV,IAAI,IAAK;QACpD,OAAOA,IAAI,CAACC,EAAE,IAAIJ,MAAM,CAACK,OAAO,CAACD,EAAE;MACpC,CAAC,CAAC;MACFL,KAAK,CAACJ,OAAO,GAAGiB,aAAa;MAE7Bb,KAAK,CAACH,SAAS,IACbkB,MAAM,CAACd,MAAM,CAACK,OAAO,CAACG,KAAK,CAAC,GAAGM,MAAM,CAACd,MAAM,CAACK,OAAO,CAACC,EAAE,CAAC;IAC5D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER,QAAQ;EAAEW;AAAU,CAAC,GAAGjB,YAAY,CAACuB,OAAO;AAC3D,eAAevB,YAAY,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}